"use strict";(()=>{var e={};e.id=349,e.ids=[349],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},7649:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>f,patchFetch:()=>g,requestAsyncStorage:()=>c,routeModule:()=>p,serverHooks:()=>h,staticGenerationAsyncStorage:()=>m});var r={};a.r(r),a.d(r,{POST:()=>d});var s=a(3278),i=a(5002),n=a(4877),o=a(1309),u=a(8713),l=a(3656);async function d(e){let{initData:t,taskId:a}=await e.json();if(!t||!a)return o.NextResponse.json({error:"Invalid request"},{status:400});let{validatedData:r,user:s}=(0,l.M)(t);if(!r)return o.NextResponse.json({error:"Invalid Telegram data"},{status:403});let i=s.id?.toString();if(!i)return o.NextResponse.json({error:"Invalid user data"},{status:400});try{let e=await u.Z.$transaction(async e=>{let t=await e.user.findUnique({where:{telegramId:i}});if(!t)throw Error("User not found");let r=await e.task.findUnique({where:{id:a}});if(!r)throw Error("Task not found");if(!r.isActive)throw Error("This task is no longer active");if("VISIT"!==r.type)throw Error("Invalid task type for this operation");if(await e.userTask.findUnique({where:{userId_taskId:{userId:t.id,taskId:r.id}}}))throw Error("Task already started");return await e.userTask.create({data:{userId:t.id,taskId:r.id,taskStartTimestamp:new Date,isCompleted:!1}})});return o.NextResponse.json({success:!0,message:"Task started successfully",taskStartTimestamp:e.taskStartTimestamp})}catch(e){return console.error("Error updating task:",e),o.NextResponse.json({error:e instanceof Error?e.message:"Failed to update task"},{status:500})}}let p=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/tasks/update/visit/route",pathname:"/api/tasks/update/visit",filename:"route",bundlePath:"app/api/tasks/update/visit/route"},resolvedPagePath:"D:\\Projects\\GMSTree\\Gmstree-master for dev\\Gmstree-master\\app\\api\\tasks\\update\\visit\\route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:c,staticGenerationAsyncStorage:m,serverHooks:h}=p,f="/api/tasks/update/visit/route";function g(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:m})}},8713:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(3524);let s=globalThis.prisma??new r.PrismaClient},3656:(e,t,a)=>{a.d(t,{M:()=>i});var r=a(4770),s=a.n(r);function i(e){let t=process.env.BOT_TOKEN,a="true"===process.env.BYPASS_TELEGRAM_AUTH;console.log("validateTelegramWebAppData"),console.log("telegramInitData",e);let r=null,i={},n="";if(a)r={temp:""},i={id:"undefined",username:"Unknown User"},n="Authentication bypassed for development";else{if(!t)return{message:"BOT_TOKEN is not set",validatedData:null,user:{}};let a=new URLSearchParams(e),o=a.get("hash");if(!o)return{message:"Hash is missing from initData",validatedData:null,user:{}};a.delete("hash");let u=a.get("auth_date");if(!u)return{message:"auth_date is missing from initData",validatedData:null,user:{}};let l=parseInt(u,10);if(Math.floor(Date.now()/1e3)-l>10800)return{message:"Telegram data is older than 3 hours",validatedData:null,user:{}};let d=Array.from(a.entries()).sort(([e],[t])=>e.localeCompare(t)).map(([e,t])=>`${e}=${t}`).join("\n");console.log("Data Check String:",d);let p=s().createHmac("sha256","WebAppData").update(t).digest(),c=s().createHmac("sha256",p).update(d).digest("hex");if(console.log("Calculated Hash:",c),console.log("Received Hash:",o),c===o){r=Object.fromEntries(a.entries()),n="Validation successful";let e=r.user;if(e)try{i=JSON.parse(e),console.log("Parsed user data:",i)}catch(e){console.error("Error parsing user data:",e),n="Error parsing user data",r=null}else n="User data is missing",r=null}else console.log(n="Hash validation failed")}return{validatedData:r,user:i,message:n}}}};var t=require("../../../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[379,833],()=>a(7649));module.exports=r})();